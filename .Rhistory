install.packages("httr")
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "03bf251828d6fdb0ed32",
secret = "5d64daf4f4bd505fd45bffebffad264673e3e6e3")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
oauth_endpoints("github")
auth <- GET ("https://github.com/login/oauth/authorize")
auth
GET https://github.com/login/oauth/authorize
GET "https://github.com/login/oauth/authorize"
myapp <- oauth_app("github",
key = "03bf251828d6fdb0ed32",
secret = "5d64daf4f4bd505fd45bffebffad264673e3e6e3")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
getwd()
library("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
mydf <- read.csv("path2csv", stringsAsFactors =FALSE)
mydf <- read.csv(path2csv, stringsAsFactors =FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
print(cran)
cran
?select
select(cra, ip_id, package, country)
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package =="swirl")
filter(cran, r_version == "3.1.1", country =="US")
?Comparison
filter(cran, r_version <= "3.0.2", country =="IN")
filter(cran,country =="US" | country == "IN")
filter(cran,size >100500" & r_os == "linux-gnu")
filter(cran,size >100500" , r_os == "linux-gnu")
filter(cran,size >100500" , r_os == linux-gnu)
filter(cran,size >100500 & r_os == "linux-gnu")
filter(cran,size >100500 , r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is-na(r_version))
filter(cran, !is.na(r_version))
cran2 <-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran, country, desc(r_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<- select(ip_id, package, size)
cran3<- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb= sizemb/2^20)
mutate(cran3, size_mb = size/2^20, size_gb= size_mb/2^20)
mutate(cran3, size_mb = size/2^20, size_gb= size_mb/2^10)
mutate(cran3, correct_size = size +1000)
summarize(cran, avg_bytes =mean(size))
library(dplyr)
tbl_df(mydf)
cran <-tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_b
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = .099)
quantile(pack_sum$count, probs = .99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(top_counts, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
swirl()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res<-gather(students2, sex_class ,count)
res<-gather(students2, sex_class ,count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
submit()
submit()
submit()
students3
?gather
submit()
?spread
submit()
extract_numeric("class5")
?mutate
extract_numeric("class5")
submit()
submit()
submit()
submit()
students4
?select
submit()
submit()
submit()
passed; failed
passed <- mutate(passed, status ="passed")
failed <- mutate(failed, status ="failed")
?bind_rows
bind_rows(passed, failed)
sat
?select
?separate
submit()
submit()
?group_by
submit()
?tidyr
swirl()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swilr()
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col ="green", breaks = 100)
rug(ppm)
hist(ppm, col ="green")
abline(v =12, lwd=12)
abline(v =12, lwd=2)
hist(ppm, col ="green")
abline(v =12, lwd=4)
Type abline(v = median(ppm), col = "magenta", lwd = 4)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg<-table(pollution$region)
reg
barplot(reg, col = "wheat", main 0 "Number of Countries in Each Region")
barplot(reg, col = "wheat", main = "Number of Countries in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~region, data =pollution, col ="red")
par(mfrow=c(2,1), mar =c(4,4,2,1))
east<-subset(pollution, reg = "east")
east<-subset(pollution, region == "east")
head(east)
hist(pollution$pm25, col = "green")
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west"), col = "green")
hist((subset(pollution, region == "west")) col = "green")
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h =12, lwd =2, lty =2)
plot(pollution$latitude, ppm, col =pollution$region)
abline(h = 12, lwd =2, lty = 2)
par(mfrow = c(1,2), mar = c(5,4,2,1))
west <- subet(pollution, region == "west")
west <- subset(pollution, region == "west")
plot( west$latitude, west$pm25, main = "West")
plot( weast$latitude, east$pm25, main = "East")
plot( east$latitude, east$pm25, main = "East")
?devices
?Devices
with( faithufl, plot( eruptions, waiting))
with( faithful, plot( eruptions, waiting))
title(main =" Old Faithful Geyser data")
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with( faithful, plot( eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with( faithful, plot( eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
with(cars, plot, speed, distance)
with(cars, plot(speed, distance))
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(sate$region)
table(state$region)
xyplot(Life.Exp~Income | region, data=state, layout = c(4,1))
xyplot(Life.Exp~Income | region, data=state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data =mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(arquality$Ozone)
hist(airquality$Ozone)
hist(airquality$Ozone)
table(airquality$Month)
dev.off()
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab ="Ozone (ppb)", col.axis = "blue", col.lab="red")
title(main="Ozone and Wind in New York City")
play()
hist(airquality$Ozone)
nxt()
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type ="n")
title(main= "Wind and Ozone in NYC")
View(pollution)
may <- subset(airquality, Month==5)
?pch
points(may$Wind, may$Ozone, col = "blue", pch= 17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch= 8)
legend("topright", pch(17,8), col = c("blue", "red"), legend = c("May", "Other Months"))
legend("topright", pch=(17,8), col = c("blue", "red"), legend = c("May", "Other Months"))
legend("topright", pch=c(17,8), col = c("blue", "red"), legend = c("May", "Other Months"))
abline(v = median(airquality$Wind), lty =2, lwd =2)
par(mfrow =c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main="Ozone and Solar Radiation")
dev.off()
par(mfrow = c(1,3), mar = c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer =TRUE)
0
exit
stop()
play()
library(sqldf)
setwd("~")
if (!file.exists("data")) {dir.create("data")}
setwd("./data")
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(url, "data.zip", method="curl")
unzip("data.zip")
file <- "household_power_consumption.txt"
df<- read.csv2.sql("household_power_consumption.txt", sql = "select * from file where Date in ('1/2/2007', '2/2/2007')")
df$Date<- as.Date(df$Date)
df$Time<- strptime(df$Time, format ="%H:%M:%S")
plot(df$Global_active_power, df$Date)
plot(df$Date, df$Global_active_power)
plot(weekdays(df$Date), df$Global_active_power)
weekdays(df$Date)
df$wd<-weekdays(df$Date)
View(df)
plot(df$wd, df$Global_active_power)
plot(df$Date, df$Global_active_power)
plot(df$Time, df$Global_active_power)
calss(wd)
class(wd)
class(df$wd)
df$wd <- as.Date(df$wd)
'as.date'
file <- "household_power_consumption.txt"
df<- read.csv2.sql("household_power_consumption.txt", sql = "select * from file where Date in ('1/2/2007', '2/2/2007')")
View(df)
df$Date<- as.Date(df$Date)
df$Time<- strptime(df$Time, format ="%H:%M:%S")
plot(df$Date, df$Global_active_power, type=2)
?plot
plot(df$Date, df$Global_active_power, type="l")
plot(df$Time, df$Global_active_power, type="l")
View(df)
?as.Date
datetime <- strptime(paste(df$Date, df$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(df$datetime, df$Global_active_power, type="l")
df$datetime <- strptime(paste(df$Date, df$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(df$datetime, df$Global_active_power, type="l")
file <- "household_power_consumption.txt"
df<- read.csv2.sql("household_power_consumption.txt", sql = "select * from file where Date in ('1/2/2007', '2/2/2007')")
df$datetime <- strptime(paste(df$Date, df$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
file <- "household_power_consumption.txt"
df<- read.csv2.sql("household_power_consumption.txt", sql = "select * from file where Date in ('1/2/2007', '2/2/2007')")
df$datetime <- strptime(paste(df$Date, df$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
View(df)
plot(df$datetime, df$Global_active_power, type="l")
file <- "household_power_consumption.txt"
df<- read.csv2.sql("household_power_consumption.txt", sql = "select * from file where Date in ('1/2/2007', '2/2/2007')")
df$Date<- as.Date(df$Date, format ="%d/%m/%Y")
df$Time<- strptime(df$Time, format ="%H:%M:%S")
plot(df$Date, df$Global_active_power, type="l")
df$datetime <- strptime(paste(df$Date, df$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(df$datetime, df$Global_active_power, type="l")
View(df)
df$datetime <- strptime(paste(df$Date, df$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(df$datetime, df$Global_active_power, type="l")
file <- "household_power_consumption.txt"
df<- read.csv2.sql("household_power_consumption.txt", sql = "select * from file where Date in ('1/2/2007', '2/2/2007')")
df$datetime <- strptime(paste(df$Date, df$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
df$Date<- as.Date(df$Date, format ="%d/%m/%Y")
df$Time<- strptime(df$Time, format ="%H:%M:%S")
plot(df$datetime, df$Global_active_power, type="l", ylab="Global Active Power (kilowatts)")
?xlab
?plot
title(xlab = NULL)
title(xlab = NULL)
title(xlab = "")
plot(df$datetime, df$Global_active_power, type="l", xlab ="" ylab="Global Active Power (kilowatts)")
plot(df$datetime, df$Global_active_power, type="l", xlab ="", ylab="Global Active Power (kilowatts)")
png(filename = "plot2.png", width = 480, height = 480)
plot(df$datetime, df$Global_active_power, type="l", xlab ="", ylab="Global Active Power (kilowatts)")
dev.off()
setwd("../ExData_Plotting1")
png(filename = "plot2.png", width = 480, height = 480)
plot(df$datetime, df$Global_active_power, type="l", xlab ="", ylab="Global Active Power (kilowatts)")
dev.off()
plot(df$datetime, df$Global_active_power, type="n")
names(df)
plot(df$datetime, df$Sub_metering_1, type="l", xlab ="", ylab ="Energy sub metering")
lines(df$datetime, df$Sub_metering_2, col ="red")
lines(df$datetime, df$Sub_metering_3, col ="blue")
?legend
?pch
legend("topright",pch =c("l", "l", "l"), lwy = 1, legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col= c("black", "red", "blue"))
legend("topright",pch =c("l", "l", "l"), legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col= c("black", "red", "blue"))
?lty
legend("topright",lty =1, legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col= c("black", "red", "blue"))
plot(df$datetime, df$Sub_metering_1, type="l", xlab ="", ylab ="Energy sub metering")
lines(df$datetime, df$Sub_metering_2, col ="red")
lines(df$datetime, df$Sub_metering_3, col ="blue")
legend("topright",lty =1, legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col= c("black", "red", "blue"))
setwd("../ExData_Plotting1")
png(filename = "plot3.png", width = 480, height = 480)
plot(df$datetime, df$Sub_metering_1, type="l", xlab ="", ylab ="Energy sub metering")
lines(df$datetime, df$Sub_metering_2, col ="red")
lines(df$datetime, df$Sub_metering_3, col ="blue")
legend("topright",lty =1, legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col= c("black", "red", "blue"))
dev.off()
names(df)
par(mfrow=2,2)
par(mfrow=c(2,2))
plot(df$datetime, df$Voltage, type="l", xlab ="", ylab="Global Active Power (kilowatts)")
dev_off()
dev.off()
par(mfrow=c(2,2)
#1
plot(df$datetime, df$Global_active_power, type="l", xlab ="", ylab="Global Active Power (kilowatts)")
#2
plot(df$datetime, df$Voltage, type="l", xlab ="", ylab="Voltage")
dev.off()
par(mfrow=c(2,2))
#1
plot(df$datetime, df$Global_active_power, type="l", xlab ="", ylab="Global Active Power (kilowatts)")
#2
plot(df$datetime, df$Voltage, type="l", xlab ="", ylab="Voltage")
plot(df$datetime, df$Sub_metering_1, type="l", xlab ="", ylab ="Energy sub metering")
lines(df$datetime, df$Sub_metering_2, col ="red")
lines(df$datetime, df$Sub_metering_3, col ="blue")
legend("topright",lty =1, legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col= c("black", "red", "blue"))
plot(df$datetime, df$Global_reactive_power, type="l", xlab ="datetime", ylab="Global_reactive_power")
setwd("../ExData_Plotting1")
png(filename = "plot4.png", width = 480, height = 480)
par(mfrow=c(2,2))
#1
plot(df$datetime, df$Global_active_power, type="l", xlab ="", ylab="Global Active Power (kilowatts)")
#2
plot(df$datetime, df$Voltage, type="l", xlab ="datetime", ylab="Voltage")
#3
plot(df$datetime, df$Sub_metering_1, type="l", xlab ="", ylab ="Energy sub metering")
lines(df$datetime, df$Sub_metering_2, col ="red")
lines(df$datetime, df$Sub_metering_3, col ="blue")
legend("topright",lty =1, legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col= c("black", "red", "blue"))
#4
plot(df$datetime, df$Global_reactive_power, type="l", xlab ="datetime", ylab="Global_reactive_power")
dev.off()
?bg
?plot
?hist
?col
?Colors
?Color
?cokor
?color
colors
colors()
plot(df$datetime, df$Sub_metering_1, type="l", xlab ="", ylab ="Energy sub metering")
lines(df$datetime, df$Sub_metering_2, col ="red")
lines(df$datetime, df$Sub_metering_3, col ="blue")
legend("topright",lty =1, legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col= c("black", "red", "blue"), bty ="o")
dev.off()
plot(df$datetime, df$Sub_metering_1, type="l", xlab ="", ylab ="Energy sub metering")
lines(df$datetime, df$Sub_metering_2, col ="red")
lines(df$datetime, df$Sub_metering_3, col ="blue")
legend("topright",lty =1, legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col= c("black", "red", "blue"), bty ="0")
dev.off()
legend("topright",lty =1, legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col= c("black", "red", "blue"), bty ="o")
plot(df$datetime, df$Sub_metering_1, type="l", xlab ="", ylab ="Energy sub metering")
lines(df$datetime, df$Sub_metering_2, col ="red")
lines(df$datetime, df$Sub_metering_3, col ="blue")
legend("topright",lty =1, legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col= c("black", "red", "blue"), bty ="o")
dev.off()
plot(df$datetime, df$Sub_metering_1, type="l", xlab ="", ylab ="Energy sub metering")
lines(df$datetime, df$Sub_metering_2, col ="red")
lines(df$datetime, df$Sub_metering_3, col ="blue")
legend("topright",lty =1, legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col= c("black", "red", "blue"), bty ="n")
png(filename = "plot4.png", width = 480, height = 480)
par(mfrow=c(2,2))
#1
plot(df$datetime, df$Global_active_power, type="l", xlab ="", ylab="Global Active Power")
#2
plot(df$datetime, df$Voltage, type="l", xlab ="datetime", ylab="Voltage")
#3
plot(df$datetime, df$Sub_metering_1, type="l", xlab ="", ylab ="Energy sub metering")
lines(df$datetime, df$Sub_metering_2, col ="red")
lines(df$datetime, df$Sub_metering_3, col ="blue")
legend("topright",lty =1, legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col= c("black", "red", "blue"), bty ="n")
#4
plot(df$datetime, df$Global_reactive_power, type="l", xlab ="datetime", ylab="Global_reactive_power")
dev.off()
png(filename = "plot1.png", width = 480, height = 480)
hist(df$Global_active_power, col ="red", xlab ="Global Active Power(kilowatts)", main ="Global Active Power")
dev.off()
